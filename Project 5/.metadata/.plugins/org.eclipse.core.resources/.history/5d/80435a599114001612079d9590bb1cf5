package edu.towson.cis.cosc603.project5.coffeemaker;

import junit.framework.TestCase;

/**
 *
 */
public class CoffeeMakerTest extends TestCase {
	private CoffeeMaker cm;
	private Inventory i;
	private Recipe r1, r2, r3, r4;

	public void setUp() {
		cm = new CoffeeMaker();
		i = cm.checkInventory();

		r1 = new Recipe();
		r1.setName("Coffee");
		r1.setPrice(50);
		r1.setAmtCoffee(6);
		r1.setAmtMilk(1);
		r1.setAmtSugar(1);
		r1.setAmtChocolate(1);
		
		r2 = new Recipe();
		r2.setName("CoffeeTwo");
		r2.setPrice(50);
		r2.setAmtCoffee(-2);
		r2.setAmtMilk(1);
		r2.setAmtSugar(1);
		r2.setAmtChocolate(-1);
		
		r3 = new Recipe();
		r3.setName("CoffeeThree");
		r3.setPrice(50);
		r3.setAmtCoffee(2);
		r3.setAmtMilk(1);
		r3.setAmtSugar(1);
		r3.setAmtChocolate(2);
		
		r4 = new Recipe();
		r4.setName("CoffeeFour");
		r4.setPrice(50);
		r4.setAmtCoffee(6);
		r4.setAmtMilk(2);
		r4.setAmtSugar(1);
		r4.setAmtChocolate(2);
		
	}
	
	public void testAddRecipe1() {
		assertTrue(cm.addRecipe(r1));
	}
	
	public void testAddRecipe2() {
		assertTrue(cm.addRecipe(r2));
	}
	
	public void testAddRecipe3() {
		assertTrue(cm.addRecipe(r3));
		assertFalse(cm.addRecipe(r3));	
	}

	public void testAddRecipe4() {
		assertTrue(cm.addRecipe(r1));
		assertTrue(cm.addRecipe(r2));
		assertTrue(cm.addRecipe(r3));
		assertFalse(cm.addRecipe(r4));	
	}

	public void testDeleteRecipe1() {
		cm.addRecipe(r1);
		assertTrue(cm.deleteRecipe(r1));
	}
	
	public void testDeleteRecipe2() {
		cm.addRecipe(r1);
		assertFalse(cm.deleteRecipe(r4));
	}
	

	public void testAddInventory1() {
		assertTrue(cm.addInventory(10, 20, 0, 30));
		assertTrue(cm.addInventory(10, 20, 0, 30));
	}

	public void testAddInventory2() {
		assertFalse(cm.addInventory(-1, 2, 7, 10));
	}

	public void testEditRecipe1() {
		cm.addRecipe(r1);
		Recipe newRecipe = new Recipe();
		newRecipe = r1;
		newRecipe.setAmtSugar(6);
		assertTrue(cm.editRecipe(r1, newRecipe));
	}
	
	public void testEditRecipe2() {
		cm.addRecipe(r1);
		Recipe newRecipe = new Recipe();
		assertFalse(cm.editRecipe(r4, newRecipe));
	}
	
    public void testCheckInventory1() {
		cm.addRecipe(r1);
		assertEquals(15,cm.checkInventory().getCoffee());
    }
    
	public void testPurchaseBeverage1() {
		cm.addInventory(30, 15, 20, 10);
		cm.addRecipe(r1);
		int result = cm.makeCoffee(r1, 60);
		assertEquals(10, result);
	}
	
	public void testPurchaseBeverage2() {
		cm.addInventory(30, 15, 20, 10);
		cm.addRecipe(r1);
		int result = cm.makeCoffee(r1, 10);
		assertEquals(10, result);
	}
	
	public void testPurchaseBeverage3() {
		cm.addInventory(30, 15, 20, 10);
		cm.addRecipe(r1);
		int result = cm.makeCoffee(r4, 50);
		assertEquals(10, result);
	}
	
}